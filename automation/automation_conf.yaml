# Configuración del Sistema de Automatización y Orquestación Inteligente
# automation_config.yaml

# Configuración general del sistema
system:
  version: "2.0.0"
  environment: "production"  # production, development, testing
  timezone: "UTC"
  log_level: "INFO"
  
# Configuración del orquestador
orchestrator:
  max_concurrent_tasks: 8
  health_check_interval: 300  # segundos
  auto_scaling: true
  intelligent_scheduling: true
  resource_monitoring: true
  
  # Límites de recursos del sistema
  resource_limits:
    cpu_threshold: 0.8        # 80% CPU máximo
    memory_threshold: 0.85    # 85% memoria máxima
    disk_threshold: 0.9       # 90% disco máximo
    max_load_average: 4.0     # Load average máximo
  
  # Configuración de timeouts
  timeouts:
    default_task: 3600        # 1 hora
    fuzzing_scan: 7200        # 2 horas
    report_generation: 600    # 10 minutos
    health_check: 300         # 5 minutos
    cleanup: 1800            # 30 minutos

# Configuración del programador de tareas
scheduler:
  enabled: true
  
  # Horarios de ejecución (formato cron)
  schedules:
    # Escaneos de seguridad
    full_scan:
      pattern: "0 8,13,18,23 * * *"  # 8 AM, 1 PM, 6 PM, 11 PM
      enabled: true
      priority: "high"
      conditions:
        max_system_load: 0.8
        allowed_hours: [8, 13, 18, 23]
    
    quick_scan:
      pattern: "*/30 * * * *"         # Cada 30 minutos
      enabled: true
      priority: "medium"
      conditions:
        max_system_load: 0.9
    
    vulnerability_scan:
      pattern: "0 2 * * 0"            # Domingos a las 2 AM
      enabled: true
      priority: "critical"
      conditions:
        max_system_load: 0.5
        allowed_hours: [2, 3, 4]
    
    subdomain_discovery:
      pattern: "0 */6 * * *"          # Cada 6 horas
      enabled: true
      priority: "medium"
      conditions:
        max_system_load: 0.7
    
    # Procesamiento de alertas
    alert_processing:
      pattern: "*/10 * * * *"         # Cada 10 minutos
      enabled: true
      priority: "high"
    
    alert_correlation:
      pattern: "0 */2 * * *"          # Cada 2 horas
      enabled: true
      priority: "medium"
    
    # Generación de reportes
    daily_report:
      pattern: "0 9 * * *"            # 9 AM diario
      enabled: true
      priority: "medium"
    
    weekly_report:
      pattern: "0 10 * * 1"           # Lunes 10 AM
      enabled: true
      priority: "medium"
    
    executive_summary:
      pattern: "0 8 1 * *"            # Primer día del mes 8 AM
      enabled: true
      priority: "low"
    
    # Mantenimiento del sistema
    health_check:
      pattern: "*/5 * * * *"          # Cada 5 minutos
      enabled: true
      priority: "low"
    
    cleanup_tasks:
      pattern: "0 1 * * *"            # 1 AM diario
      enabled: true
      priority: "low"
      conditions:
        max_system_load: 0.3
        allowed_hours: [1, 2, 3]
    
    backup_data:
      pattern: "0 0 * * 0"            # Domingos medianoche
      enabled: true
      priority: "medium"
      conditions:
        max_system_load: 0.3
    
    model_training:
      pattern: "0 3 * * 0"            # Domingos 3 AM
      enabled: true
      priority: "low"
      conditions:
        max_system_load: 0.4
        allowed_hours: [3, 4, 5]

# Configuración de workers
workers:
  # Worker de fuzzing
  fuzzing:
    enabled: true
    max_instances: 2
    timeout: 7200
    retry_attempts: 2
    config:
      default_scan_type: "quick"
      max_domains_per_scan: 10
      max_paths_per_domain: 1000
      concurrent_requests: 5
  
  # Worker de alertas
  alerts:
    enabled: true
    max_instances: 3
    timeout: 300
    retry_attempts: 3
    config:
      alert_correlation_window: 3600  # 1 hora
      max_alerts_per_batch: 100
      auto_classification: true
      ml_threshold: 0.8
  
  # Worker de reportes
  reports:
    enabled: true
    max_instances: 2
    timeout: 600
    retry_attempts: 2
    config:
      output_formats: ["html", "json", "pdf"]
      include_charts: true
      max_report_size_mb: 50
      retention_days: 90

# Configuración de aprendizaje adaptativo
adaptive_learning:
  enabled: true
  learning_period_days: 7
  min_data_points: 10
  
  # Objetivos de optimización
  optimization_targets:
    - "response_time"
    - "resource_usage" 
    - "success_rate"
    - "threat_detection_accuracy"
  
  # Configuración de modelos ML
  models:
    anomaly_detection:
      enabled: true
      algorithm: "isolation_forest"
      retrain_interval_days: 7
      threshold: 0.1
    
    priority_classification:
      enabled: true
      algorithm: "random_forest"
      retrain_interval_days: 3
      features: ["severity", "asset_value", "exploit_probability"]
    
    trend_prediction:
      enabled: true
      algorithm: "time_series"
      prediction_horizon_days: 7
      confidence_threshold: 0.8

# Configuración de notificaciones
notifications:
  # Telegram
  telegram:
    enabled: true
    bot_token: "${TELEGRAM_BOT_TOKEN}"
    chat_ids:
      - "${TELEGRAM_CHAT_ID_SECURITY}"
      - "${TELEGRAM_CHAT_ID_ADMIN}"
    notification_levels: ["critical", "high"]
    rate_limit_minutes: 5
  
  # Email
  email:
    enabled: false
    smtp_server: "smtp.company.com"
    smtp_port: 587
    username: "${EMAIL_USERNAME}"
    password: "${EMAIL_PASSWORD}"
    recipients:
      - "security@company.com"
      - "admin@company.com"
    notification_levels: ["critical", "high", "medium"]
  
  # Webhook
  webhook:
    enabled: false
    url: "${WEBHOOK_URL}"
    headers:
      Authorization: "Bearer ${WEBHOOK_TOKEN}"
    notification_levels: ["critical"]

# Configuración de integración con herramientas externas
integrations:
  # Herramientas de fuzzing
  fuzzing_tools:
    ffuf:
      enabled: true
      binary_path: "/usr/local/bin/ffuf"
      default_args: ["-c", "-v", "-r"]
      timeout: 3600
    
    dirsearch:
      enabled: true
      binary_path: "/opt/dirsearch/dirsearch.py"
      default_args: ["-q", "--random-agent"]
      timeout: 1800
    
    gobuster:
      enabled: false
      binary_path: "/usr/local/bin/gobuster"
      default_args: ["dir", "-q"]
      timeout: 1800
  
  # Herramientas de descubrimiento
  discovery_tools:
    subfinder:
      enabled: true
      binary_path: "/usr/local/bin/subfinder"
      timeout: 600
    
    amass:
      enabled: false
      binary_path: "/usr/local/bin/amass"
      timeout: 1800
  
  # Bases de datos de amenazas
  threat_intel:
    virustotal:
      enabled: false
      api_key: "${VIRUSTOTAL_API_KEY}"
      rate_limit_per_minute: 4
    
    shodan:
      enabled: false
      api_key: "${SHODAN_API_KEY}"
      rate_limit_per_minute: 10

# Configuración de almacenamiento y persistencia
storage:
  # Base de datos principal
  database:
    type: "sqlite"
    path: "data/orchestrator.db"
    backup_enabled: true
    backup_interval_hours: 24
    retention_days: 90
  
  # Almacenamiento de reportes
  reports:
    directory: "reports"
    max_size_gb: 10
    retention_days: 180
    compression: true
  
  # Logs del sistema
  logs:
    directory: "logs"
    max_size_mb: 100
    rotation_days: 7
    compression: true
    levels: ["INFO", "WARNING", "ERROR"]

# Configuración de monitoreo y métricas
monitoring:
  # Métricas de sistema
  system_metrics:
    enabled: true
    collection_interval_seconds: 60
    retention_days: 30
    
    # Umbrales de alerta
    alert_thresholds:
      cpu_usage: 85
      memory_usage: 90
      disk_usage: 95
      task_failure_rate: 0.1
  
  # Métricas de rendimiento
  performance_metrics:
    enabled: true
    track_task_duration: true
    track_resource_usage: true
    track_success_rates: true
  
  # Health checks
  health_checks:
    enabled: true
    endpoints:
      - name: "database"
        check: "database_connection"
        interval_seconds: 300
      - name: "fuzzing_engine"
        check: "component_availability"
        interval_seconds: 600
      - name: "disk_space"
        check: "disk_usage"
        interval_seconds: 300
        threshold: 90

# Configuración de seguridad
security:
  # Control de acceso
  access_control:
    enabled: true
    require_authentication: false  # Para desarrollo
    api_keys_enabled: false
    rate_limiting: true
    max_requests_per_minute: 100
  
  # Cifrado y protección de datos
  encryption:
    encrypt_sensitive_data: true
    key_rotation_days: 90
    hash_algorithm: "sha256"
  
  # Logs de auditoría
  audit_logging:
    enabled: true
    log_task_executions: true
    log_configuration_changes: true
    log_access_attempts: true
    retention_days: 365

# Configuración de desarrollo y debug
development:
  debug_mode: false
  verbose_logging: false
  mock_external_services: false
  test_data_enabled: false
  
  # Configuración de testing
  testing:
    enable_test_tasks: false
    test_domains: ["httpbin.org", "jsonplaceholder.typicode.com"]
    test_wordlist_size: 50
    dry_run_mode: false

# Variables de entorno requeridas
environment_variables:
  required:
    - "TELEGRAM_BOT_TOKEN"
    - "TELEGRAM_CHAT_ID_SECURITY"
  optional:
    - "EMAIL_USERNAME"
    - "EMAIL_PASSWORD"
    - "WEBHOOK_URL"
    - "WEBHOOK_TOKEN"
    - "VIRUSTOTAL_API_KEY"
    - "SHODAN_API_KEY"

# Configuración de escalado automático
auto_scaling:
  enabled: true
  
  # Métricas de escalado
  scale_up_conditions:
    cpu_usage_threshold: 70
    memory_usage_threshold: 75
    queue_size_threshold: 10
    response_time_threshold: 30
  
  scale_down_conditions:
    cpu_usage_threshold: 30
    memory_usage_threshold: 40
    queue_size_threshold: 2
    idle_time_minutes: 15
  
  # Límites de escalado
  min_workers: 2
  max_workers: 10
  scale_step: 1
  cooldown_minutes: 5